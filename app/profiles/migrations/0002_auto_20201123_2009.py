# Generated by Django 2.2.12 on 2020-11-23 17:09

import ckeditor.fields
import cloudinary.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(blank=True, choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], null=True)),
                ('from_hour', models.TimeField(blank=True, null=True)),
                ('to_hour', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'BusinessHours',
                'ordering': ('weekday', 'from_hour'),
            },
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pro_category', models.CharField(choices=[('PCAT1', 'realestate_services'), ('PCAT2', 'surveying_and_construction'), ('PCAT3', 'architecture_and_building_design'), ('PCAT4', 'general_services'), ('PCAT5', 'renovation_and_remodeling'), ('PCAT6', 'appliances_and_systems'), ('PCAT7', 'cleaning_services')], default=None, max_length=100)),
                ('pro_speciality', models.CharField(choices=[('VALUER', 'valuer'), ('REALESTATE_AGENT', 'realestate_agent'), ('PROPERTY_MANAGER', 'property_manager'), ('FACILITY_MANAGER', 'facility_manager'), ('BUILDING_INSPECTOR', 'building_inspector'), ('LAND_SURVEYOR', 'land_surveyor'), ('QUANTITY_SURVEYOR', 'quantity_surveyor'), ('CONSTRUCTION_MANAGER', 'construction_manager'), ('ARCHITECT', 'architect'), ('LANDSCAPE_ARCHITECT', 'landscape_architect'), ('LANDSCAPE_DESIGNER', 'landscape_designer'), ('GENERAL_CONTRACTOR', 'general_contrator'), ('LANDSCAPE_CONTRACTOR', 'landscape_contractor'), ('INTERIOR_DESIGNER_AND_DECORATOR', 'interior_designer_and_decorator'), ('PHOTOGRAPHER', 'photographer'), ('MOVER', 'mover'), ('CARPENTER', 'carpenter'), ('DOOR_DEALER', 'door_dealer'), ('CARPET_DEALER', 'carpet_dealer'), ('BUILDING_SUPPLIES', 'building_suplies'), ('PLUMBER', 'plumber'), ('HOME_AUTOMATION_AND_HOME_MEDIA', 'home_automation_and_home_media'), ('ELECTRICIAN', 'electrician'), ('SOLAR_ENERGY_SYSTEMS', 'solar_energy_systems'), ('HOUSE_CLEANER', 'house_cleaner'), ('CARPET_AND_UPHOLSTERY_CLEANER', 'carpet_and_upholstery_cleaner'), ('WINDOW_CLEANER', 'window_cleaner'), ('GARBAGE_CLEANER', 'garbage_cleaner'), ('PEST_CONTROL', 'pest_control'), ('EXTERIOR_CLEANER', 'exterior_cleaner')], default=None, max_length=100, null=True)),
                ('business_profile_image', models.ImageField(blank=True, upload_to='business_profile_images/')),
                ('phone', models.CharField(blank=True, max_length=13)),
                ('business_email', models.EmailField(blank=True, max_length=254)),
                ('address', models.CharField(blank=True, max_length=250)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('website_link', models.URLField(blank=True)),
                ('facebook_page_link', models.URLField(blank=True)),
                ('twitter_page_link', models.URLField(blank=True)),
                ('linkedin_page_link', models.URLField(blank=True)),
                ('instagram_page_link', models.URLField(blank=True)),
                ('about', ckeditor.fields.RichTextField(blank=True)),
                ('service_areas', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None)),
                ('services', models.CharField(blank=True, choices=[('REALESTATE_VALUATION', 'realestate_valuation'), ('LAND_VALUATION', 'land_valuation'), ('PROPERTY_CONSULTANCY', 'property_consultancy'), ('BUYING_AND_SELLING_PROPERTY', 'buying_and_selling_property'), ('PROPERTY_LISTING', 'property_listing'), ('PROPERTY_MANAGEMENT', 'property_management'), ('FACILITY_MANAGEMENT', 'facility_management'), ('BUILDING_CONDITION_ASSESSMENT', 'building_condition_asessment'), ('LAND_SERVEYING', 'land_surveying')], default=None, max_length=100, null=True)),
                ('member_since', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'BusinessProfile',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_logo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('client_name', models.CharField(max_length=25)),
                ('business_category', models.CharField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pro_business_client', to='profiles.BusinessProfile')),
            ],
            options={
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porfolio_item_type', models.CharField(choices=[('PROPERTY_MANAGEMENT', 'property_management'), ('PROJECT_MANAGEMENT', 'property_management')], max_length=100, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('worth', models.PositiveIntegerField(null=True)),
                ('year', models.CharField(max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('description', models.TextField(null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('map_point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('progress', models.CharField(choices=[('COMPLETE', 'complete'), ('ONGOING', 'ongoing'), ('STALLED', 'stalled')], default=None, max_length=100, null=True)),
                ('video', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'PortfolioItem',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItemPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', cloudinary.models.CloudinaryField(blank=True, max_length=255, verbose_name='image')),
                ('portfolio_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_item_photo', to='profiles.PortfolioItem')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 'Never'), (2, 'Not likely'), (3, 'Mybe'), (4, 'Likely'), (5, 'Highly likely')], null=True)),
                ('responsive_rating', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('knowledge_rating', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('negotiation_rating', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('professionalism_rating', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('quality_rating', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('creativity', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('attention_to_detail', models.PositiveIntegerField(choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very good')], null=True)),
                ('service', models.CharField(choices=[('1', 'Helped me sell my home.'), ('2', 'Helped me find tenants.'), ('3', 'Helped me buy a home.'), ('4', 'Helped me find a rental.'), ('5', 'Consultation.'), ('6', 'Listed my property on Rehgien.'), ('7', 'None. Reached out but never responded.'), ('8', 'Managed(s) my property.')], max_length=50, null=True)),
                ('comment', models.TextField(null=True)),
                ('date_of_service', models.DateField(null=True)),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pro_business_review', to='profiles.BusinessProfile')),
            ],
            options={
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.RemoveField(
            model_name='agentprofile',
            name='followers',
        ),
        migrations.RemoveField(
            model_name='agentprofile',
            name='saves',
        ),
        migrations.RemoveField(
            model_name='agentprofile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='agentreviews',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='agentreviews',
            name='user',
        ),
        migrations.RemoveField(
            model_name='agenttopclient',
            name='profile',
        ),
        migrations.AlterUniqueTogether(
            name='companybusinesshours',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='companybusinesshours',
            name='user',
        ),
        migrations.RemoveField(
            model_name='companyprofile',
            name='followers',
        ),
        migrations.RemoveField(
            model_name='companyprofile',
            name='saves',
        ),
        migrations.RemoveField(
            model_name='companyprofile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='companyreviews',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='companyreviews',
            name='user',
        ),
        migrations.RemoveField(
            model_name='companytopclient',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='designandserviceproprofile',
            name='followers',
        ),
        migrations.RemoveField(
            model_name='designandserviceproprofile',
            name='saves',
        ),
        migrations.RemoveField(
            model_name='designandserviceproprofile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='designandserviceproprojects',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='designandserviceproreviews',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='designandserviceproreviews',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='dsbusinesshours',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='dsbusinesshours',
            name='user',
        ),
        migrations.RemoveField(
            model_name='dsproprojectimages',
            name='project',
        ),
        migrations.RemoveField(
            model_name='dstopclient',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='pmportfolio',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='pmportfolioimages',
            name='portfolio',
        ),
        migrations.AlterUniqueTogether(
            name='propertymanagerbusinesshours',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='propertymanagerbusinesshours',
            name='user',
        ),
        migrations.RemoveField(
            model_name='propertymanagerprofile',
            name='followers',
        ),
        migrations.RemoveField(
            model_name='propertymanagerprofile',
            name='saves',
        ),
        migrations.RemoveField(
            model_name='propertymanagerprofile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='propertymanagerreviews',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='propertymanagerreviews',
            name='user',
        ),
        migrations.RemoveField(
            model_name='propertymanagertopclient',
            name='profile',
        ),
        migrations.AddField(
            model_name='user',
            name='account_type',
            field=models.CharField(choices=[('BASIC', 'basic'), ('PREMIUM', 'premium')], default='BASIC', max_length=10),
        ),
        migrations.AlterField(
            model_name='teammateconnection',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection_request_receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='teammateconnection',
            name='requestor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection_requestor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('CLIENT', 'client'), ('PRO', 'pro')], default='CLIENT', max_length=20),
        ),
        migrations.DeleteModel(
            name='AgentBusinessHours',
        ),
        migrations.DeleteModel(
            name='AgentProfile',
        ),
        migrations.DeleteModel(
            name='AgentReviews',
        ),
        migrations.DeleteModel(
            name='AgentTopClient',
        ),
        migrations.DeleteModel(
            name='CompanyBusinessHours',
        ),
        migrations.DeleteModel(
            name='CompanyProfile',
        ),
        migrations.DeleteModel(
            name='CompanyReviews',
        ),
        migrations.DeleteModel(
            name='CompanyTopClient',
        ),
        migrations.DeleteModel(
            name='DesignAndServiceProProfile',
        ),
        migrations.DeleteModel(
            name='DesignAndServiceProProjects',
        ),
        migrations.DeleteModel(
            name='DesignAndServiceProReviews',
        ),
        migrations.DeleteModel(
            name='DSBusinessHours',
        ),
        migrations.DeleteModel(
            name='DSProProjectImages',
        ),
        migrations.DeleteModel(
            name='DSTopClient',
        ),
        migrations.DeleteModel(
            name='PMPortfolio',
        ),
        migrations.DeleteModel(
            name='PMPortfolioImages',
        ),
        migrations.DeleteModel(
            name='PropertyManagerBusinessHours',
        ),
        migrations.DeleteModel(
            name='PropertyManagerProfile',
        ),
        migrations.DeleteModel(
            name='PropertyManagerReviews',
        ),
        migrations.DeleteModel(
            name='PropertyManagerTopClient',
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='portfolioitem',
            name='created_by',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='profiles_portfolioitem_createdby_related', related_query_name='profiles_portfolioitem_createdby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businessprofile',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='business_page_followers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businessprofile',
            name='saves',
            field=models.ManyToManyField(blank=True, related_name='business_page_saves', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businessprofile',
            name='user',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='pro_business_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businesshours',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_business_hours', to='profiles.BusinessProfile'),
        ),
        migrations.AlterUniqueTogether(
            name='businesshours',
            unique_together={('weekday', 'from_hour', 'to_hour')},
        ),
    ]
